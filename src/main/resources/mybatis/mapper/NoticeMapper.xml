<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chen.ems.core.mapper.NoticeMapper">
  <resultMap id="BaseResultMap" type="com.chen.ems.core.model.NoticeVO">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="created_id" jdbcType="INTEGER" property="createdId" />
    <result column="created_name" jdbcType="VARCHAR" property="createdName" />
    <result column="created_time" jdbcType="TIMESTAMP" property="createdTime" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="title" jdbcType="VARCHAR" property="title" />
  </resultMap>
  <sql id="Base_Column_List">
    id, created_id, created_time, content, title
  </sql>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from ems_notice
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.chen.ems.core.model.NoticeVO" useGeneratedKeys="true">
    insert into ems_notice (created_id, content, title)
    values (#{createdId,jdbcType=INTEGER}, #{content,jdbcType=VARCHAR},#{title,jdbcType=VARCHAR})
  </insert>

  <select id="getNotice" resultMap="BaseResultMap">
    select n.id, n.created_id, n.created_time, n.content, n.title,u.username as created_name from ems_notice n left join ems_user u on n.created_id = u.id
        <where>
          <if test="createdId !=null">
            AND created_id = #{createdId}
          </if>
          <if test="createdTime != null">
            AND convert(created_time,DATE) =convert(#{createdTime,jdbcType=TIMESTAMP},DATE)
          </if>
        </where>
        order by created_time desc
  </select>


</mapper>